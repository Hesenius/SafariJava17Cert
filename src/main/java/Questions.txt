Q) Which are legal:
A) class X {
     var x = 99;
   }
B) void doStuff(var x) { }
C) void doStuff() {
     var x;
     x = 100;
   }
D) void doStuff() {
     var x = 100;
   }
E) void doStuff() {
     var x = { 1, 2, 3 };

Q) Which are legal
A)
   for (var x = 0; x < 3; x++)
     System.out.println(x);
B)
   try (var in = new FileReader("");
        var out = new FileWriter("")) {
   }
C)
   var var = "var";
D) var x = new int[]{1,2,3};
E) var [] x = new int[]{1,2,3};

Q) Given:
int x = -1;
sout(x & 5);

What is the result?
A) Compilation fails
B) Exception at runtime
C) -1
D) 0x00000005
E) 5

Q)   Which print "true"
A) String s = "Hello";
  String t = "He";
  t += "llo";
  sout(s == t);
B) String s = "Hello";
  String t = "He";
  t += "llo";
  sout(s.equals(t));
C) StringBuilder s = new StringBuilder("Hello");
  StringBuilder t = new StringBuilder("He");
  t.append("llo");
  sout(s.equals(t));
D) List<String> ls = List.of("Fred", "Jim");
  List<String> ls2 = new ArrayList<>(ls);
  sout(ls.equals(ls2));
E) LocalDate ld = LocalDate.of(2021, 3, 29);
  LocalDate ld2 = LocalDate.of(2021, 3, 29);
  sout(ld.equals(ld2));

Q)
Given: in another jarfile:
class X {
  static String h = "Hello";
}

Which are true?
  String s1 = "Hello";
  String s2 = new StringBuilder("Hello").toString();
  String s3 = s2.intern();

A) s1 == s2
B) s2 == s3
C) s1 == s3
D) X.h == s1
E) None of the above

Q) Given:
    Object obj = "Hello";
    if (obj instanceof String) {
      String str = (String)obj;
      if (str.length() > 3) {
        System.out.println(str);
      } else {
        System.out.println("Too short");
      }
    }

Which is/are equivalent
A)    System.out.println(obj instanceof String str && str.length() > 3
        ? str : "Too short");
B)    if (obj instanceof String str when str.length() > 3)
        System.out.println(str);
      else System.out.println("Too short");
C)    if (obj instanceof String str if str.length() > 3)
        System.out.println(str);
      else System.out.println("Too short");
D)    System.out.println(obj instanceof String.class str && str.length() > 3
        ? str : "Too short");
E)    if (obj instanceof String str && str.length() > 3)
        System.out.println(str);
      else System.out.println("Too short");

Q)
class Base {
   void doBaseStuff() { System.out.println("doBaseStuff"); }
 }
and:
 class Sub extends Base {
   void doBaseStuff() { System.out.println("doSubStuff"); }
   void doOtherStuff() { System.out.println("doOtherStuff"); }
 }
and
Base b = new Sub(); ((Sub) b).doOtherStuff(); => answer B
or this one?
Base b = new Sub(); b.doOtherStuff(); => E

What is the result?
A) doSubStuff
B) doOtherStuff
C) doBaseStuff
D) Exception at runtime
E) Compilation failure



Q) Given:
enum Day { MONDAY; } ... Day x = Day.MONDAY;

Which is/are valid?

A) int x = 99; while (x) {}
B) int x = 99; switch (x) {}
C) switch (x) {
   case MONDAY: ...
D) switch (x) {
   case Day.MONDAY: ...
E) long count = 99;
 switch (count) {}

Q) Given:
String s = "Hello";
switch (s) {
    case "Hello" ->
         System.out.print("Bonjour "); // line n1
         System.out.print("Guten Tag ");
    default -> System.out.print("Bye");
}

Which is true?
A) The code prints: Bonjour Guten Tag Bye
B) The code prints: Bonjour Guten Tag
C) If line n1 is removed the code prints: Guten Tag Bye
D) If line n1 is removed the code prints: Guten Tag
E) The code fails to compile

Q) Given:
int x = 1;
// line n1
switch(x) {
    case 1: LocalDate.of(2023, x, 1);
    default: LocalDate.of(2022, 12, 1);
};

Which is/are true individually?
A) The code compiles
B) The code throws an exception at runtime
C) The code compiles if line n1 is replaced with
   var d =
D) The code compiles if the word "yield" is inserted
   after the colon in both the case and default
E) The code compiles if the changes of both C and D
   are applied

Q) Given:
final String s = "Hello";
// line n1
var m =
switch (s) {
     // line n2
     case "Hello" -> "Bonjour";
};
System.out.println(m);

Which are true?
A) Compilation succeeds
B) The code throws an exception
C) The code prints Bonjour
D) The code prints Salut if this line is added at line n2
  case String -> "Salut";
E) The code prints Bonjour if this line is added at line n2
  default -> "Unknown";

Q) Given:
   short s = 8;
   System.out.println(switch (s) { // line n1
     // line n2
     default -> "It's something else";
   });
Which are true?
A) Compilation fails at line n1
B) The code runs and prints It's something else
C) Adding at line n2
  case 2,4,6,8 -> "Even < 10";
  gives the output Even < 10
D) Adding at line n2
  case 2|4|6|8 -> "Even < 10";
  gives the output Even < 10
E) Adding at line n2
  case 2 -> case 4 -> case 6 -> case 8 -> "Even < 10";
  gives the output Even < 10

Q) Given:
       var x = 10;
       var res = switch(x) {
         case 10 -> x; // line n1
         default -> "It's not ten"; };
   Which is/are true?
A) The code fails to compile
B) The type of res can only be expressed fully using var
C) Changing line n1 to:
  System.out.println("x is ten");
  return x;
  causes printing of the message x is ten
D) Changing line n1 to:
  { System.out.println("x is ten"); x; }
  causes printing of the message x is ten
E) Changing line n1 to:
  System.out.println("x is ten");
  yield x;
  causes printing of the message x is ten

Q) Given:
class MyException extends Exception {}
and:
static void mightBreak() throws IOException, FileNotFoundException, SQLException {}
and:
 void caller() throws Throwable {
   try {
     mightBreak();
   }
   catch (IOException e) {}
   // line n1
 }
What can be added at line n1?
A) catch (IOException e) {}
B) catch (FileNotFoundException e) {}
C) catch (SQLException e) {}
D) catch (Exception e) {}
E) catch (MyException e) {}

Q) Given
 void doStuff() throws IOException {};
 void doStuff2() throws FileNotFoundException {};
And:
 void tryStuff() {
   try {
     doStuff();
     doStuff2();
   } enter code here {
     // handle both exceptions
   }
 }
What can be inserted at "enter code here"
to provide handling of exceptions from both
methods?
A) catch (IOException | FileNotFoundException e)
B) catch (FileNotFoundException | IOException e)
C) catch (FileNotFoundException e)
D) catch (IOException e)
E) finally

Q) Given:
   try (var fr = new FileReader("main.txt"); // line n1
       var br = new BufferedReader(fr);){ // line n2
     if (!br.ready()) {
       br = new BufferedReader(new FileReader("backup.txt")); // line n3
     }
     String line;
     while ((line = br.readLine()) != null)
       System.out.println(">> " + line);
   }

What is the result?
A) Compilation fails at line n1
B) Compilation fails at line n2
C) Compilation fails at line n3
D) If main.txt is readable, its contents are shown,
  but if not, the contents of backup.txt are shown
E) If main.txt is readable, its contents are shown
  but if not, the program exits with an unhandled exception

Q) Given:
   class AC4 implements AutoCloseable {
     public void close() throws Exception { throw new SQLException(); }
   }
And:
   try ( var one = new AC3();
       var two = new AC3(); ){
     throw new FileNotFoundException();
   }
Which are true?
A) Compilation fails
B) A FileNotFoundException is thrown to the caller
C) An SQLException is thrown to the caller
D) close methods of resources "one" and "two" are called
E) close methods of resources "one" and "two" are not both called
